// *************************** Outer Planetary Atmospheric Probe
// 
//
CONTRACT_TYPE
{
	name 			= ProbeOuterAtmosphere
	sortKey 		= 125
	group 			= OuterPlanetExploration
	title			= Send a probe to descend through the atmoshpere of @/targetBody
	genericTitle	= Send a probe to descend through the atmosphere of the Gas Planet
	topic			= Exploration
	notes			= Design a probe to descend as far through the atmosphere of the Gas Planet, @/targetBody
	synopsis 		= Design a probe to descend as far through the atmosphere of the Gas Planet, @/targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 0
	targetBody		= @/targetBodyValid1
	
	description 		= Our scientists want to explore the unforgiving atmosphere of the planet @/targetBody.  Design a probe to descend as far as it can to collect data in the atmosphere before the probe is destroyed. 
	genericDescription 	= Our scientists want to explore the atmosphere of the Gas planets.  Send a atmospheric probe and collect data in the atmoshpere.
	completedMessage	= Success!  Our probe survived long enough to collect valuable science data.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.4					// Funds = Variable
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:outerBodiesGas
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		uniquenessCheck 	= GROUP_ACTIVE
		targetBodyValid1	= @/targetBody1
	}	

	DATA
	{
		type = double
		AtmoAlt = @targetBody.AtmosphereAltitude()
		AtmoAltKM = @/AtmoAlt / 1000     // Convert to km 
		Alt90KM = @targetBody.AtmosphereAltitude() * 0.90 /1000
		Alt80KM = @targetBody.AtmosphereAltitude() * 0.80 /1000
		Alt70KM = @targetBody.AtmosphereAltitude() * 0.70 /1000
		Alt60KM = @targetBody.AtmosphereAltitude() * 0.60 /1000
		Alt50KM = @targetBody.AtmosphereAltitude() * 0.50 /1000
		Alt40KM = @targetBody.AtmosphereAltitude() * 0.40 /1000
		Alt30KM = @targetBody.AtmosphereAltitude() * 0.30 /1000
		Alt20KM = @targetBody.AtmosphereAltitude() * 0.20 /1000
		Alt10KM = @targetBody.AtmosphereAltitude() * 0.10 /1000
		title = Determine the atmosphere altitude interface for the planet
	}	
	DATA
	{
		type = List<float>
		AltStep = [ 90, 80, 70, 60, 50, 40, 30, 20, 10]
		title = Define optional descent objectives
	}
	

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			checkType = UNMANNED
		}
		
		REQUIREMENT
		{
			name = Expression2
			type = Expression
			expression = @targetBody.HasSurface() == false
			title = Planet must be a gas planet without a surface
		}
	
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = ProbeAtmo
		type = VesselParameterGroup
		title = Send a probe to descend the atmosphere of @/targetBody.
		define = ProbeAtmo
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Probe
			title = Vessel needs to be a probe type
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = ReachOrbit
			type = ReachState
			situation = ORBITING
			situation = ESCAPING
			title = Reached the Planet SOI either in orbit or on a flyby trajectory
			completeInSequence = true
		}
		PARAMETER
		{
			name = suborbital
			type = ReachState
			situation = SUB_ORBITAL
			title = Enter into a suborbital trajectory
			completeInSequence = true
		}
		PARAMETER
		{
			name = FlyingState
			type = ReachState
			situation = FLYING
			title = Enter into atmosphere, survive long enough to transmit some science data
			completeInSequence = true

			PARAMETER
			{
				name = CollectScience
				type = CollectScience
				recoveryMethod = Transmit
				title = Transmit Science from the atmosphere of @/targetBody
				hideChildren = true
			}
		}		
		// ----------------------------------------------------- Optional Objectives
		//
		
		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.90
			optional = true
			title = Descend to reach the altitude of @/Alt90KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt90KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.80
			optional = true
			title = Descend to reach the altitude of @/Alt80KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt80KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.70
			optional = true
			title = Descend to reach the altitude of @/Alt70KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt70KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.60
			optional = true
			title = Descend to reach the altitude of @/Alt60KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt60KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.50
			optional = true
			title = Descend to reach the altitude of @/Alt50KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt50KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.40
			optional = true
			title = Descend to reach the altitude of @/Alt40KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt40KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.30
			optional = true
			title = Descend to reach the altitude of @/Alt30KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt30KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.20
			optional = true
			title = Descend to reach the altitude of @/Alt20KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt20KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	

		PARAMETER
		{
			name = ReachAltitude
			type = ReachState
			situation = FLYING
			maxAltitude = @/targetBody.AtmosphereAltitude() * 0.10
			optional = true
			title = Descend to reach the altitude of @/Alt10KM km
			completedMessage = Congratulations! Our probe have passed the altitude of @/Alt10KM km, how much longer will it survived!
			rewardFunds = @KSP_Contracts:FundComp 
		}	



	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//


}	
		
	