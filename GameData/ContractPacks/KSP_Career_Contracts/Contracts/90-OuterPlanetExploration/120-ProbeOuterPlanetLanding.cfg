// *************************** Outer Planetary Probe Landing
// 
//
CONTRACT_TYPE
{
	name 			= ProbeOuterPlanetLanding
	sortKey 		= 120
	group 			= OuterPlanetExploration
	title			= Probe landing on the surface of @/targetBody
	genericTitle	= Probe landing on the surface of Outer System Planet
	topic			= Exploration
	notes			= Launch a probe and safely land on the surface of @targetBody and collect some science
	synopsis 		= Launch a probe and safely land on the surface of @targetBody and collect some science
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 0
	targetBody		= @/targetBodyValid1
	
	description 		= We have entered orbit and collected science in Space around @/targetBody.  Now we need to send a probe lander to the surface of @/targetBody to future explore the planet. 
	genericDescription 	= We have entered orbit and collected science in Space around the planet.  Now we need to send a probe lander to the surface to future explore the planet. 
	completedMessage	= Success!  Our probe safely landed on the surface and we returned science data to our scientists.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.5					// Funds = $30,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Significant
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:outerBodiesSurface
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		uniquenessCheck 	= GROUP_ACTIVE
		targetBodyValid1	= @/targetBody1
	}	
	
	

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			checkType = UNMANNED
		}
		
		REQUIREMENT
		{
			name = Expression2
			type = Expression
			expression = @targetBody.HasSurface() == true
			title = Planet body must have a surface to land
		}
	
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = ProbeLanding
		type = VesselParameterGroup
		title = Land a probe on the surface of @/targetBody.
		define = ProbeOuterLanding
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Probe
			title = Vessel needs to be a probe type
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on the surface of @/targetBody.
			hideChildren = false
			completeInSequence = true

			PARAMETER
			{
				name = CollectScience
				type = CollectScience
				recoveryMethod = Transmit
				title = Transmit Science from the surface of @/targetBody
				hideChildren = true
				completeInSequence 	= true
			}

		}

	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//
	BEHAVIOUR
	{
		name = Progression
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
		probeOuterLanding = $probeOuterLanding + 1
		}
	}	

}	
		
	