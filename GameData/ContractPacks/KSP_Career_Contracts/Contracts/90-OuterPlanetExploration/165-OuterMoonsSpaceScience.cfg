// *************************** Outer Moons Orbital Science Collection
// 
//
CONTRACT_TYPE
{
	name 			= OuterMoonsSpaceScience
	sortKey 		= 165
	group 			= OuterPlanetExploration
	title			= Collect Orbital Science, perform @/experiment around @/targetMoon
	genericTitle	= Perform experiments to collect science around the target body.
	topic			= Exploration
	notes			= Send a craft or probe to collect science in space around @/targetMoon
	synopsis 		= Send a craft or probe to collect science in space around @/targetMoon
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= Our scientists are not happy with the missing science we could collect in space around @/targetMoon.  Launch a mission to collect science data using the @experiment in space.
	genericDescription 	= Our scientists are not happy with the missing science we could collect in space around our home planet.  Launch a mission to collec the missing science data.
	completedMessage	= Success! Our science team is happy with the results, but they fear there is more science to collect.  
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 0.2					// Funds = $30,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.2					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:outerBodies
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		uniquenessCheck 	= GROUP_ACTIVE
		targetBodyValid1	= @/targetBody1
	}	
	DATA 
	{	
		type 				= List<CelestialBody>
		targetMoons			= @/targetBody.Children()
		title				= Find the planet's moons
	}
	DATA
	{
		type				= int
		moonCount 			= @/targetMoons.Count()
		title				= Determine the number of moons
	}
	DATA
	{
		type				= CelestialBody
		targetMoon			= @/targetMoons.Random()
		title				= Select a moon around the planet
	}
	
	DATA
	{
		type 			= List<ScienceExperiment>
        hidden = true		
		experimentAll 	= AvailableExperiments(@targetMoon).ExcludeAll([ evaReport, crewReport, surfaceSample ])
	}
	
	DATA
	{
		type			= ScienceExperiment
		uniquenessCheck	= CONTRACT_ALL
        hidden = true
		experiment		= @experimentAll.SelectUnique()
	}
	
	DATA
	{
		//[ SrfLanded, SrfSplashed, FlyingLow, FlyingHigh, InSpaceLow, InSpaceHigh ]
		//
		type			= List<ScienceSubject>
        hidden = true
		scienceTemp1	= AllScienceSubjectsByBodyExperiment([@targetMoon], [@experiment])
		scienceTemp2	= @scienceTemp1.Where(sc => sc.RemainingScience() >= 1.5)
		scienceTemp3	= @scienceTemp2.Where(sc => sc.Situation() == InSpaceLow || sc.Situation() == InSpaceHigh)
		scienceSelect	= @scienceTemp3.Random(3)
	}


	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			targetBody = @/targetMoon
			checkType = UNMANNED
		}
		
		REQUIREMENT
		{
			type = Expression
			name = Expression1
			expression = @/scienceSelect.Count() >= 1

			title = Must have a valid experiment to perform
		}

		REQUIREMENT
		{
			type = Expression
			name = Expression2
			expression = @/moonCount > 0
			title = Must have a moon orbiting the planet
		}

	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
    {
		name = CollectScience
		type = CollectScience

		targetBody = @/targetMoon
        subject = @/scienceSelect
        recoveryMethod = Ideal
    }

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	