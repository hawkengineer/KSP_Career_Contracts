// *************************** Send Crew to Surface Base
// 
//
CONTRACT_TYPE
{
	name 			= SurfaceBaseCrew
	sortKey 		= 100
	group 			= AdvancedExploration
	title			= Send a crew to the surface base on @/targetBody
	genericTitle	= Send a crew to a surface base
	topic			= Exploration
	notes			= Send a crew to the surface base location on the surface of @/targetBody
	synopsis 		= Send a crew to the surface base location on the surface of @/targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 3
	targetBody		= @/targetBody1
	
	description 		= We need you to send a crew to the surface base location on @/targetBody.  Launch a mission and transfer the crew to the surface base.
	genericDescription 	= We need you to send a crew to the surface base.  Launch a mission and transfer the crew to the surface base.
	completedMessage	= Congratulations! The crew successfully arrived at the surface base and have started to work.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.1				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.6					// 
	advanceFunds		= @KSP_Contracts:FundAdv * 1.25					// 
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Base && v.CrewCount()<1 && v.IsLanded()).SelectUnique()
		title = Must have a surface base without crew
	}	
	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
		title = Get the target body where the base is located
	}
	DATA
    {
		type = int
		requiredValue = true
		targetCapacity = Max(@/targetVessel1.CrewCapacity(), 2)
		hidden = true
    }

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @KSP_Contracts:randomRoll > 4
		title = Add some variability to when the contract triggers
	}


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = BaseCrew
		type = VesselParameterGroup
		title = Send a crew mission to @/targetVessel1 located on the surface of @/targetBody1 

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}		

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 2
			maxCrew = @/targetCapacity
			title = Needs to have at least 2 crew members but less than the base capacity
			hideChildren = true
		}
		
		PARAMETER
		{
			name = LandonSurface
			type = ReachState
			situation = LANDED
			targetBody = @/targetBody
			disableOnStateChange = true
			title = Land on @targetBody near the surface base.
			hideChildren = true
			completeInSequence = true
		}
	}
	
	PARAMETER
	{
		name = TransferCrew
		type = VesselParameterGroup
		title = Transfer the crew to the surface base.
		Vessel = @/targetVessel1
		
		PARAMETER
		{
			name = CrewStaff
			type = HasCrew
			minCrew = 2
			maxCrew = @/targetCapacity
			title = Needs to have at least 2 crew members but less than the base capacity
			hideChildren = true
			disableOnStateChange = true
		}

		completeInSequence = true
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	