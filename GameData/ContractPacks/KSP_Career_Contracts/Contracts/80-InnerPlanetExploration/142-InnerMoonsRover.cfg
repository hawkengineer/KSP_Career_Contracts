// *************************** Inner Planetary Probe Moon Landing
// 
//
CONTRACT_TYPE
{
	name 			= InnerMoonRover
	sortKey 		= 142
	group 			= InnerPlanetExploration
	title			= Launch and deliver a rover to the surface of the moon around @/targetBody
	genericTitle	= Launch and deliver a rover to the surface of Inner System Planet Moons
	topic			= Exploration
	notes			= Launch and safely land a rover on the surface the moon around @/targetBody to explore the different regions.
	synopsis 		= Launch and safely land a rover on the surface the moon around @/targetBody to explore the different regions.
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 1
	maxSimultaneous = 0
	targetBody		= @/targetBodyValid1
	
	description 		= We need to expand our surface exploration of the moons around @/targetBody.  Launch and safely deliver a rover to the surface. 
	genericDescription 	= Launch and safely deliver a rover to the surface of the moon to collect science and further our exploration.
	completedMessage	= Success!  Our rover is safely on the surface and is investigating the different features of the moon of @/targetBody.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 0.5					// Funds = $30,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:innerBodies
		
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	
	DATA
	{
		type 		= List<CelestialBody>
		targetMoons = @/targetBody.Children().Where(mn => mn.HasSurface() && mn.IsMoon())
		moonsLand	= LandedBodies().Where(mn => mn.IsMoon() && mn.Parent() == @/targetBody)
		title		= Find the moons around the planet & Number of Moons landed on the surface
	}

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = Landing
			type = Landing
			checkType = UNMANNED
		}
		REQUIREMENT
		{
			name = Expression1
			type = Expression
			expression = @/targetMoons.Count() > 0
			title = Needs to have at least one moon orbiting around the planet
		}
		REQUIREMENT
		{
			name = Expression2
			type = Expression
			expression = @/targetMoons.Count() == @/moonsLand.Count()
			title = Must have landed on all the Moons orbiting around the planet
		}

	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = PlanetRover
		type = VesselParameterGroup
		title = Land a rover on the surface of @/targetBody.
		define = InnerPlanetRover
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Rover
			title = Vessel needs to be a Rover type
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = LandOnPlanet
			type = ReachState
			situation = LANDED
			title = Land on the surface of @targetMoon.
			hideChildren = false
			rewardFunds			= @KSP_Contracts:FundComp * 1.3


			PARAMETER
			{
				name = CollectScience
				type = CollectScience
				situation = SrfLanded
				recoveryMethod = Transmit
				title = Transmit Science from the Surface of @../targetMoon
				hideChildren = true
				completeInSequence = true
			}
			
			ITERATOR
			{
				type = CelestialBody
				targetMoon = @/targetMoons
			}
			REQUIREMENT
			{
				type = Expression
				name = Expression3
				expression = @/targetMoons.Count() > 0
				title = Need to have a moon
			}
			

		}

	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//


}	
		
	