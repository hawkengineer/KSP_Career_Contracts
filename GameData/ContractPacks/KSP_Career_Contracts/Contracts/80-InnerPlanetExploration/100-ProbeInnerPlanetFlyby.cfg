// *************************** Inner Planetary Flybys
// 
//
CONTRACT_TYPE
{
	name 			= ProbeInnerPlanetFlyby
	sortKey 		= 100
	group 			= InnerPlanetExploration
	title			= Probe flyby of @targetBody
	genericTitle	= Probe flyby of Inner System Planet
	topic			= Exploration
	notes			= Launch a probe to flyby @targetBody and collect some science
	synopsis 		= Launch a probe to flyby @targetBody and collect some science
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= Our next step is to explore the inner planets in our system.  Design and launch a probe to perform a flyby of @/targetBody.  The flyby shall have a maximum altitude of @/maxAltKM km.  During the flyby, collect and transmit science data.  
	genericDescription 	= Our next step is to explore the inner planets in our system.  Design and launch a probe to perform a flyby of the inner planets to collect and transmit science data.
	completedMessage	= Success!  Our probe flew within @/maxAltKM km of @/targetBody and returned important scientific data!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.1					// Funds = $30,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:innerBodies
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}

	DATA
	{	
		type				= List<CelestialBody>
		requiredValue	 	= false
		targetList		 	= @KSP_Contracts:nextBodies
		reachedList			= @KSP_Contracts:reachedBodies
	}

	DATA
	{
		type 			= float
		innerflybyIndex	= $innerFlybyCount + 1   // +1 to accomodate string index starts at 0
	}
	
	DATA
	{
		type = double
		BodySOI = @targetBody.SphereOfInfluence()
		maxAltKM = @/BodySOI * 0.95 /1000     // Convert to km (85% of the SOI)
		title = Max Altitude for Flyby // (needs to be less than SOI)
	}	

	DATA
	{
		type				= List<CelestialBody>
		requiredValue		= false
		innerNextBodies		= @KSP_Contracts:nextBodies
	}

	DATA
	{
		type			= int
		requiredValue 	= false
		numMoons		= @KSP_Contracts:homeMoons.Count()
		numMoonsOrbit	= @KSP_Contracts:orbitedMoons.Count()
		
	}
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All
		
		REQUIREMENT
		{
			name = Expression
			type = Expression
			checkOnActiveContract = false
			expression = @/numMoons == @/numMoonsOrbit
			title = Verify that a probe has orbited all homeworld moons
		}

		REQUIREMENT
		{
			name = Expression2
			type = Expression
			expression = (@/targetList.Contains(@/targetBodyValid1) || @/reachedList.Contains(@/targetBodyValid1))  == true
			title = Verify that planet is on the next on the sequence to explore
		}
	
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = ProbeFlyby
		type = VesselParameterGroup
		title = Probe Planet Flyby Craft
		define = ProbeInnerFlyby
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Probe
			title = Vessel needs to be a probe type
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = FlybyPlanet
			type = ReachState
			situation = ESCAPING
			disableOnStateChange = true
			title = Flyby @targetBody
			hideChildren = false
			completeInSequence = true
		}
		PARAMETER
		{
			name = FlybyAlt
			type = ReachState
			maxAltitude = @/BodySOI * 0.85   // Set Max Altitude to 85% of SOI
			disableOnStateChange = true
			title = Flyby @/targetBody within @/maxAltKM km
			hideChildren = true

			PARAMETER
			{
				name = CollectScience
				type = CollectScience
				location			= Space
				recoveryMethod 		= RecoverOrTransmit
				completeInSequence 	= true
			}

		}

	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//


}	
		
	