// *************************** Inner Planetary Planet Moons Landing
// 
//
CONTRACT_TYPE
{
	name 			= ProbeInnerMoonLanding
	sortKey 		= 125
	group 			= InnerPlanetExploration
	title			= Probe Landing on the Moons around the planet @/targetBody
	genericTitle	= Probe Landing on the Moons around the Inner Planets
	topic			= Exploration
	notes			= Send a probe to land on the Moons around the planet @/targetBody, this can be done in multiple launches.
	synopsis 		= Send a probe to land on the Moons around the planet @/targetBody, this can be done in multiple launches.
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= We want to investigate the surface of the Moons around the planet @/targetBody.  Send a probe to land on each of the moons, if needed, multiple launches can occur to complete the mission objectives.  
	genericDescription 	= Send a probe to land on the moons around the inner planets and collect science data.
	completedMessage	= Success!  We completed @/moonCount landing on the moon(s) that are orbiting the planet @/targetBody!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 0.5					// Funds = $30,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:innerBodies
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	
	DATA 
	{	
		type 				= List<CelestialBody>
		targetMoons			= @/targetBody.Children().Where(mn => mn.HasSurface() && !mn.HaveLandedOn())
		mOrbited			= @/targetBody.Children().Where(mn => mn.HaveOrbited())
		title				= Find the planet's moons with a surface
	}
	DATA
	{
		type				= int
		moonCount 			= @/targetMoons.Count()
		mOrbitedCount		= @/mOrbited.Count()
		title				= Determine the number of moons
	}


	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			checkType = UNMANNED
		}

		REQUIREMENT
		{
			name = Expression1
			type = Expression
			expression = @/targetMoons.Count() > 0
			title = Ensure there is at least one moon to orbit.
		}
		REQUIREMENT
		{
			name = Expression2
			type = Expression
			expression = @/mOrbitedCount > 0
			title = Verify that at least one moon has been orbited around the the planet.
		}

	
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = ProbeInnerMoonLanding
		type = VesselParameterGroup
		title = Land on the surface of the Moons(s) around @/targetBody
		define = ProbeInnerMoonLanding
		
		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
			vesselType = Probe
			title = Vessel needs to be a probe type
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = LandingMoon
			type = ReachState
			situation = LANDED
			situation = SPLASHED
			title = Land on the Moon of @targetMoon
			rewardFunds			= @KSP_Contracts:FundComp * 1.1
			rewardReputation	= @KSP_Contracts:RewardRep * Random(2.0, 4.0)
			completedMessage = Congratulations! You landed on the surface of @targetMoon orbiting around the planet of @/targetBody
			
			ITERATOR
			{
				type = CelestialBody
				targetMoon = @/targetBody.Children()
			}
			PARAMETER
			{
				name = CollectScience
				type = CollectScience
				targetBody = @../targetMoon
				location			= Surface
				recoveryMethod 		= Transmit

			}

		}

	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//


}	
		
	