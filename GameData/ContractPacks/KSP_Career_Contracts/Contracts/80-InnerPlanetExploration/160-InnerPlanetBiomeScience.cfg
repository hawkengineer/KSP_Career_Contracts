// *************************** Inner Planet Biome Science Collection
// 
//
CONTRACT_TYPE
{
	name 			= InnerPlanetBiomeScience
	sortKey 		= 160
	group 			= InnerPlanetExploration
	title			= Perform experiments within the @/biomeSelect biome on @/targetBody
	genericTitle	= Perform selected experiments within the target biome on an inner system planet.
	topic			= Exploration
	notes			= Build craft to collect science within the @/biomeSelect of @/targetBody
	synopsis 		= Build craft to collect science within the @/biomeSelect of @/targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= The scientists discovered holes in their data within the @/biomeSelect on the planet @/targetBody.  We need you to run the experiments within the @/biomeSelect biome to collect the data to fill in the missing holes.
	genericDescription 	= Perform an experiment in various situations.
	completedMessage	= Mission Complete!  The Scientists are happy that the amount of missing data is less, but they believe their is still alot more to be collected.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 0.4					// Funds = $30,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.3					// Adv Funds = $15,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:innerBodiesSurface
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	
	DATA
	{
		type 			= List<ScienceExperiment>
        hidden = true		
		experimentAll 	= AvailableExperiments(@targetBody).ExcludeAll([ evaReport, crewReport, surfaceSample ])
	}

	DATA
	{
		type 			= Biome
        hidden = true		
		uniquenessCheck = CONTRACT_ACTIVE
		biomeSelect		= @targetBody.Biomes().Where(sc => sc.RemainingScience() > 40).SelectUnique()
	}
	DATA
	{
		type			= List<ScienceSubject>
        hidden = true		
		scienceSelect	= AllScienceSubjectsByBiome([@biomeSelect]).Where(sc => sc.RemainingScience() >= 1.0 && (sc.Situation()== SrfLanded || sc.Situation() == SrfSplashed)).Random(6)
	}	

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//

	REQUIREMENT
	{
		name = All
		type = All

		REQUIREMENT
		{
			name = Landing
			type = Landing
			checkType = UNMANNED
			title = Verify that the program has landed on the surface from a previous mission.
		}
		
		REQUIREMENT
		{
			type = Expression
			expression = @/scienceSelect.Count() >= 1
			title = Must have valid experiments to run
		}
	
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        type = CollectScience

        subject = @/scienceSelect.Where(s => s.Situation() == @experimentSituation)
        recoveryMethod = Ideal
        rewardFunds = 1000.0 + Random(500.0, 1500.0) * @subject.Count()

        ITERATOR
        {
            type = ExperimentSituations
            experimentSituation = [ SrfLanded, SrfSplashed]
        }
        REQUIREMENT
        {
            type = Expression
            expression = @../subject.Count() > 0
        }
    }

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	