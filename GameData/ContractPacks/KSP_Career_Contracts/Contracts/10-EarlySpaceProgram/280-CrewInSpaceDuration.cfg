// *************************** Repeat Crew In Space Duration
// 
// Goal for this contract is to live in space for various times
//
CONTRACT_TYPE
{
	name 			= CrewInSpaceDuration
	sortKey 		= 280
	group 			= EarlySpaceProgram
	title			= Crew in Orbit for @targetDuration days
	genericTitle	= Crew in orbit for target number of days
	topic			= Exploration
	notes			= Crew in orbit for target number of days
	synopsis 		= Live in space for @targetDuration days
	cancellable		= false
	declinable 		= false
	autoAccept		= true
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 			= We need to continue to learn more about the affects of space.  Send a crew into orbit and live in orbit for @targetDuration days. 
	genericDescription 		= We need to conitnue to learn more about the affects of space.  Send a crew into space to live for the target number of days.
	completedMessage		= Congratulations!  We set a new record for living in space, how long can we live in space safely?
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= (20000.0 + @currentRewards * 20000.0)			// Variable
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $25,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
    DATA
    {
        type = List<Duration>

        crewedDurations = [ 14d, 30d, 60d]
    }
    DATA
    {
        type = List<float>
        crewedDurationsNum = [ 14, 30, 60 ]
    }	
    DATA
	// Rewards	
    {
        type = List<float>
        fundsReward = [ 5, 5, 10 ]
    }
    
    DATA
    {
        type = float

        currentIndex = DurationIndex
    }

    DATA
    {
        type = Duration
        title = Duration

        targetDuration = @crewedDurations.ElementAt(@currentIndex)
    }
    DATA
    {
        type = float

        targetDurationNum = @crewedDurationsNum.ElementAt(@currentIndex)
    }

    DATA
    {
        type = float

        currentRewards = @fundsReward.ElementAt(@currentIndex)
    }	

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CrewOrbitOneWeek
		title = Complete @contractType Contract
	}

    REQUIREMENT
    {
        type = Expression
        title = Crewed Duration

        expression = @/currentIndex < @/crewedDurations.Count()
    }
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = VesselGroup
        type = VesselParameterGroup
        title = Stay in space for @/targetDuration
        
        PARAMETER
        {
            name = durationInSpace
            type = All
            title = Stay in space for @/targetDuration
            
            disableOnStateChange = False
            
            PARAMETER
            {
                name = ReachState
                type = ReachState
                situation = ORBITING
                situation = SUB_ORBITAL
                situation = ESCAPING
                
                targetBody = AllBodies()
                
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = HasCrew
                type = HasCrew
                minCrew = 1
                
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = Duration
                type = Duration
                duration = @/targetDuration
            }
        }
    }
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviors
	//
    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            DurationIndex = DurationIndex + 1
        }
    }	
	
	
}	
		
	