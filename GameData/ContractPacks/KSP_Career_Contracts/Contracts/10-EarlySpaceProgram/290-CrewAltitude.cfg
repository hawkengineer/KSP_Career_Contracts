// *************************** Repeat Crew Altitude Record
// 
// Goal for this contract is to send crew crafts to different altitudes
//
CONTRACT_TYPE
{
	name 			= CrewAltitude
	sortKey 		= 290
	group 			= EarlySpaceProgram
	title			= Set Crew Altitude record of @targetAltitudeKM km.
	genericTitle	= Set new Crew Altitude Record
	topic			= Exploration
	notes			= Send crew to target altitude.
	synopsis 		= Send crew to set a new altitude record of @targetAltitudeKM km.
	cancellable		= false
	declinable 		= false
	autoAccept		= true
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 			= We sent probes out but now we need to send crew out to various altitudes.  Send a craft with crew to an altitude of targetAltitudeKM km. 
	genericDescription 		= Send a craft with crew to various target altitudes.
	completedMessage		= Congratulations!  We set a new record for crew altitude distance, how far can we go?
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @curFunds										// Variable
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = $25,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
    DATA
    {
        type = List<float>

        crewedAlts = [ 5000, 15000, 25000, 40000, 60000, 85000, 120000, 180000, 350000, 500000, 1000000 ]
    }

     DATA
    {
        type = float

        crewedAltIndex = AltitudeIndex
    }
	
   DATA
    {
        type = float

        targetAltitude = @crewedAlts.ElementAt(@crewedAltIndex)
    }
    
	DATA
    {
        type = float

        targetAltitudeKM = @targetAltitude * 0.001
    }

	DATA
	{
		type 	= float
		curFunds 	= 5000.0 + (@targetAltitude * 0.08)
	}
	

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = ProbeOrbitReturn
		title = Complete @contractType Contract
	}

    REQUIREMENT
    {
        type = Expression
        title = Crewed Duration

        expression = @/crewedAltIndex < @/crewedAlts.Count()
    }
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = ReachState
        type = ReachState

        minAltitude = @/targetAltitude
    }
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 1
	}
	
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviors
	//
    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            AltitudeIndex = AltitudeIndex + 1
        }
    }	
	
	
}	
		
	