// *************************** Home World Science Collection
// 
// Goal for this contract is collect science around the home planet.  
//
CONTRACT_TYPE
{
	name 			= HomeScience
	sortKey 		= 130
	group 			= KerbinAeronautics
	title			= Perform experiments within the @/biomeSelect biome on @/targetBody
	genericTitle	= Perform selected experiments on the home planet.
	topic			= Exploration
	notes			= Build craft to collect the various science around our home world.
	synopsis 		= Build craft to collect science within the @/biomeSelect of @/targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 2
	targetBody		= HomeWorld()
	
	description 		= The scientists discovered holes in their data about our home world.  We need you to run the experiments within the @/biomeSelect biome to collect the data to fill in the missing holes.
	genericDescription 	= Perform an experiment in various situations.
	completedMessage		= Mission Complete!  The Scientists are happy that the amount of missing data is less, but they believe their is still alot more to be collected.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 0.2					// Funds = $10,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.1					// Adv Funds = $5,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{
		type 			= Biome
        hidden = true		
		uniquenessCheck = CONTRACT_ACTIVE
		biomeSelect		= @targetBody.Biomes().Where(sc => sc.RemainingScience() > 10).SelectUnique()
	}
	DATA
	{
		type			= List<ScienceSubject>
        hidden = true		
		scienceSelect	= AllScienceSubjectsByBiome([biomeSelect]).Where(sc => sc.RemainingScience() >= 1.0).Random(6)
	}	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
    REQUIREMENT
    {
        type = Expression
        title = Must have valid experiments to run around the home planet.
        expression = @/scienceSelect.Count() >= 1
    }
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstLaunch
		title = Complete @contractType Contract
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        type = CollectScience

        subject = @/scienceSelect.Where(s => s.Situation() == @experimentSituation)
        recoveryMethod = Ideal
        rewardFunds = 1000.0 + Random(500.0, 1500.0) * @subject.Count()

        ITERATOR
        {
            type = ExperimentSituations
            experimentSituation = [ SrfLanded, SrfSplashed, FlyingLow, FlyingHigh ]
        }
        REQUIREMENT
        {
            type = Expression
            expression = @../subject.Count() > 0
        }
    }

}	
		
	