// *************************** Add More Fuel Capacity to Space Station
// 
//
CONTRACT_TYPE
{
	name 			= StationAddFuel
	sortKey 		= 170
	group 			= SpaceStations
	title			= Add more fuel capacity to @/targetVessel1 in orbit around @/targetBody
	genericTitle	= Expand existing space station fuel capacity
	topic			= Space Station
	notes			= Launch and assemble more fuel capacity to @/targetVessel1 in orbit around @/targetBody
	synopsis 		= Launch and assemble more fuel capacity to @/targetVessel1 in orbit around @/targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBody1
	
	description 		= Our space station needs to be expanded, expand the fuel capacity to @/targetVessel1 in orbit around @/targetBody.
	genericDescription 	= Expand the fuel capacity of the space station.
	completedMessage		= Mission Complete!!! We expanded the space station to accomodate additional fuel.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.1				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 2.5					// Funds = Variable
	advanceFunds		= @KSP_Contracts:FundAdv * 1.0					// Adv Funds = Variable
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

		DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.FreeDockingPorts()>0 && v.ResourceCapacity(LiquidFuel)<5760 && v.ResourceCapacity(Oxidizer)<7040 && v.IsOrbiting()).SelectUnique()
		title = Must have an open Docking Port and have less LFO capacity than two Jumbo Tank
	}

	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
	}

	DATA
	{
		type 	= Double
		LFAdd	= Random(1000, 1500)
		OxAdd	= Random(1500, 2000)
		title	= Identify the amount to increase
	}
	
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = StationSixMonths
		title = Complete @contractType Contract
	}

	REQUIREMENT
	{
		name = ReturnFromOrbit
		type = ReturnFromOrbit
		checkType = MANNED
	}

	REQUIREMENT
	{
		name = CompleteContractDelay
		type = CompleteContract
		minCount = 0
		contractType = StationAddFuel
		cooldownDuration = 60d
		title = Wait at least 60 days after completing a previous mission
	}

	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @KSP_Contracts:randomRoll > 3
		title = Add variable to when the contract is triggered
	}


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = AddFuelCapacity
		type = VesselParameterGroup
		title = Increase the LFO Capacity on @/targetVessel1, add @/LFAdd units of liquid fuel and @/OxAdd units of Oxidizer
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = AllResources
			type = All
			title = Launch a new module with at least @/LFAdd units of Liquid Fuel, @/OxAdd units of Oxidizer and at least 1 docking port.
			notes = This is the amount of LFO to add to the station
			hideChildren = true
			
			PARAMETER
			{
				name = HasFuel
				type = HasResource
				resource = LiquidFuel
				minQuantity = @/LFAdd
				title = Launch a new module with at least @/LFAdd units of Liquid Fuel
				hideChildren = true
			}
			PARAMETER
			{
				name = HasOxidizer
				type = HasResource
				resource = Oxidizer
				minQuantity = @/OxAdd
				title = Launch a new module with at least @/OxAdd units of Oxidizer
				hideChildren = true
			}
			PARAMETER
			{
				name = DockingPort
				type = PartValidation
				partModule = ModuleDockingNode
				minCount = 1
				title = Have at least 1 Docking Ports
				hideChildren = true
			}
		}
	}
	
	PARAMETER
	{
		name = DockWithStation
		type = Docking
		vessel = @/targetVessel1
		title = Dock @/targetVessel1
		hideChildren = true
		disableOnStateChange = true
		completeInSequence = true
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	