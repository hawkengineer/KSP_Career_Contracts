// *************************** Send Crew to Space Station for 6 months
// 
// Goal for this contract is to launch a crew to the new space station in orbit to live for 6 months.
//
CONTRACT_TYPE
{
	name 			= StationSixMonths
	sortKey 		= 120
	group 			= SpaceStations
	title			= Send a crew to live on the Space Station, @/targetVessel1 for 6 months
	genericTitle	= Send the first crew to live on the space station for 6 months
	topic			= Space Station
	notes			= Send a crew to the Space Station, @/targetVessel1 to live for six months
	synopsis 		= Send a crew to the Space Station, @/targetVessel1 to live for six months
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 		= We need to perform an extended space duration mission to the space station, @/targetVessel1 for six months.
	genericDescription 	= Send a crew to the space station to live for six months.
	completedMessage		= Mission Complete!!! Our crew survived the six months!  The next goal is to make it one full year.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.1				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 2.8					// Funds = $140,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.8					// Adv Funds = $40,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
    {
        type = Vessel
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.IsOrbiting() == true && v.CelestialBody() == @targetBody).SelectUnique()
		title = Verify Orbital Space Station in orbit
    }	

	DATA
    {
        type = List<Kerbal>
        targetKerbals = @targetVessel1.Crew()
		hidden = true
    }
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = StationFirstCrew
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CrewInSpaceDuration
		title = Complete @contractType Contract
	}


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = StationSixMonthCrew
		type = VesselParameterGroup
		title = Bring the new crew to @/targetVessel1 to live for 90 days
		define = StationSixMonthCrew
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 2
			title = Have at least 2 crewmembers on board
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModuleType = Dock
			minCount = 1
			title = Have at least 1 Docking Port
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = DockWithStation
			type = Docking
			vessel = @/targetVessel1
			title = Dock @/targetVessel1
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = Duration
			type = Duration
			duration = 180d
			preWaitText = Transfer to the station in the specified orbit.
			waitingText = Orbiting for 180 days
			completionText = Stay completed, you may return home now.
			disableOnStateChange = true
		}
	}
	
	PARAMETER
	{
		name = CrewRotationReturn
		type = VesselParameterGroup
		title = Bring your first crew home from @/targetVessel1
		define = CrewRotationReturn
		
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Crew Home Safely
			hideChildren = true
			completeInSequence = true
		}
		
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbals
		}		
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	