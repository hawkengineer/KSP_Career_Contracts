// *************************** Add More Crew Capacity to Space Station
// 
// Goal for this contract is to add more crew capacity to an existing station.
//
CONTRACT_TYPE
{
	name 			= StationAddCrew
	sortKey 		= 160
	group 			= SpaceStations
	title			= Add more crew capacity to @/targetVessel1 in orbit around @/targetBody
	genericTitle	= Expand existing space station crew capacity
	topic			= Space Station
	notes			= Launch and assemble more crew capacity to @/targetVessel1 in orbit around @/targetBody
	synopsis 		= Launch and assemble more crew capacity to @/targetVessel1 in orbit around @/targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBody1
	
	description 		= Our space station needs to be expanded, expand the crew capacity to @/targetVessel1 in orbit around @/targetBody.
	genericDescription 	= Expand the crew capacity of the space station.
	completedMessage		= Mission Complete!!! We expanded the space station to accomodate additional crew.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.1				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 4.0					// Funds = Variable
	advanceFunds		= @KSP_Contracts:FundAdv * 1.0					// Adv Funds = Variable
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCapacity() <=25 && v.IsOrbiting()).SelectUnique()
		title = Must have a station with less than 25 crew capacity
	}

	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
	}
	
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = StationSixMonths
		title = Complete @contractType Contract
	}

	REQUIREMENT
	{
		name = ReturnFromOrbit
		type = ReturnFromOrbit
		checkType = MANNED
	}

	REQUIREMENT
	{
		name = CompleteContractDelay
		type = CompleteContract
		minCount = 0
		contractType = StationAddCrew
		cooldownDuration = 60d
		title = Wait at least 60 days after completing a previous mission
	}

	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @KSP_Contracts:randomRoll > 3
		title = Add variable to when the contract is triggered
	}


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = AddCrewCapacity
		type = VesselParameterGroup
		title = Increase the Crew Capacity on @/targetVessel1
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Launch a new module with space for at least 3 crew
			hideChildren = true
		}
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
			title = Have at least 1 Docking Ports
			hideChildren = true
		}
	}
	
	PARAMETER
	{
		name = DockWithStation
		type = Docking
		vessel = @/targetVessel1
		title = Dock @/targetVessel1
		hideChildren = true
		disableOnStateChange = true
		completeInSequence = true
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	