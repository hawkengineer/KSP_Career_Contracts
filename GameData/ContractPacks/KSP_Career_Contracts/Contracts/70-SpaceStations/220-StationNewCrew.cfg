// *************************** Rotate a crew from the Space Station
// 
// Goal for this contract is to rotate a crew from the station
//
CONTRACT_TYPE
{
	name 			= StationNewCrew
	sortKey 		= 220
	group 			= SpaceStations
	title			= Send Crew  to live on the Space Station, @/targetVessel1, orbiting @/targetBody
	genericTitle	= Send crew to an empty space station.
	topic			= Space Station
	notes			= Send Crew to live on the Space Station, @/targetVessel1, orbiting @/targetBody. 
	synopsis 		= Send Crew to live on the Space Station, @/targetVessel1, orbiting @/targetBody. 
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= @/targetBody1
	
	description 		= Our scientists and management identified an empty space station without any crew.  This is a missed opportunity to gather science and further our knowledge.  Launch a vessel to send some crew to the empty space station @/targetVessel1 orbiting around @/targetBody1.
	genericDescription 	= Send crew to an empty space station.
	completedMessage		= Mission Complete!!! The new crew has arrived at the space station and is eagerly working!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.1				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.5					// Funds = $140,000
	advanceFunds		= @KSP_Contracts:FundAdv * 1.0					// Adv Funds = $40,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()<1 && v.FreeDockingPorts()>0 && v.IsOrbiting()).SelectUnique()
		title = Must have a station with no crew and is in orbit
	}

	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
		title = Get the target body where the station is located
	}
	
	DATA
    {
		type = int
		requiredValue = true
		targetCapacity = Max(@/targetVessel1.CrewCapacity(), 2)
		hidden = true
    }

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstSpaceStation
		title = Complete @contractType Contract
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType = StationNewCrew
		cooldownDuration = 30d
		title = Wait at least 30 days after completing a previous Crew Rotation contract
	}

	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @KSP_Contracts:randomRoll > 4
		title = Add some variability to when the contract triggers
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = AddNewCrew
		type = VesselParameterGroup
		title = Send new Crew to @/targetVessel1
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 2
			maxCrew = @/targetCapacity
		}
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
			title = Have at least 1 Docking Ports
			hideChildren = true
		}
	}
	
	PARAMETER
	{
		name = DockWithStation
		type = Docking
		vessel = @/targetVessel1
		title = Dock @/targetVessel1
		hideChildren = true
		disableOnStateChange = true
		completeInSequence = true
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

}	
		
	