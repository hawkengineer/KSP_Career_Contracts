// *************************** Random Satellite Contract Mission
// 
//
CONTRACT_TYPE
{
	name 			= RandomSat
	sortKey 		= 600
	group 			= Satellites
	title			= Put a new Satellite in orbit of @/targetBody1
	genericTitle 	= Put a new Satellite in Orbit.
	topic			= Exploration
	notes			= Launch a satellite into orbit around @targetBody
	synopsis 		= Launch a satellite into orbit around @targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	maxCompletions 	= 0
	maxSimultaneous = 3
	targetBody		= @targetBody1
	
	description 		= We have a request to launch a new satellite and place it in the specified orbit around @targetBody1.
	genericDescription 	= We have a request to launch a new satellite and place it in the specified orbit.
	completedMessage	= Congratulations!  The mission is complete and we made our customers very happy!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.1				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.5					// Funds = $100,000
	advanceFunds		= @KSP_Contracts:FundAdv * 0.2					// Adv Funds = $25,000
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Variable Funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	//prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{	
		type = CelestialBody
		targetBody1 = OrbitedBodies().Random()
		uniquenessCheck	= GROUP_ACTIVE
		title = Must have reached orbit.
	}

	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = PolarSat
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name 		= Orbit
		type 		= Orbit
		checkType 	= UNMANNED
	}

	REQUIREMENT
	{
	name = Any
	type = Any
		REQUIREMENT
		{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		partModule = ModuleDeployableSolarPanel
		}
		REQUIREMENT:NEEDS[NearFutureSolar]
		{
		name = PartModuleUnlocked
		type = PartModuleUnlocked
		partModule = ModuleCurvedSolarPanel
		}
	}
	REQUIREMENT
	{
		name = Probe
		type = PartUnlocked
		part = probeCoreSphere
	}
	REQUIREMENT
	{
		name = Expression
		type = Expression
		checkOnActiveContract = false
		expression = @KSP_Contracts:randomRoll >4
		title = The RNG must like you.
	}


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = RandomSat
		type = VesselParameterGroup
		title = Place Satellite in Specified Orbit
		define = RandomSat
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = ReachSpecificOrbit
			type = ReachSpecificOrbit
			index = 0
			title = Achieve Specified Orbit around @/targetBody
			deviationWindow = Prestige() == Trivial ? 10.0 : Prestige() == Significant ? 7.0 : 5.0
		}
		PARAMETER
		{
			name = Duration
			type = Duration
			startCriteria = PARAMETER_COMPLETION
			parameter = ReachSpecificOrbit
			duration = 30s
			preWaitText = waiting for correct orbit.
			waitingText = Verifing correct orbit parameters
			completionText = Completed, proper orbit achieved!
		}
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//	
	BEHAVIOUR
	{
		name = OrbitGenerator
		type = OrbitGenerator
		RANDOM_ORBIT
		{
			type = Random
			altitudeFactor = @/targetBody1.IsMoon() ? 0.9 : Prestige() == Trivial ? 0.1 : Prestige() == Significant ? 0.3 : 0.5
			inclinationFactor = @/targetBody1.IsSun() ? 0 : Prestige() == Trivial ? 0.1 : Prestige() == Significant ? 0.3 : 0.5
			
		}
	}

}	
		
	