// *************************** Homeworld Moon Probe Orbit
// 
// Goal for this contract is to build a probe to orbit the home world moons  
//
CONTRACT_TYPE
{
	name 			= ProbeHomeMoonOrbit
	sortKey 		= 120
	group 			= MoonExploration
	title			= Probe to orbit around @targetBody
	genericTitle	= Probe to orbit the moon of the home planet
	topic			= Exploration
	notes			= Launch a probe to orbit around the @targetBody and return some science data
	synopsis 		= Launch a probe to orbit around the @targetBody and return some science data
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= We successfully performed a fly of @targetBody, the next step is to launch a probe and orbit around @targetBody.  Don't forget to collect and return some science data.
	genericDescription 	= The next step is to launch a probe to orbit around the moon
	completedMessage	= Mission Success! We sent a probe to orbit @targetBody.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(1.0, 2.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 1.0					// Funds = based on targetBody
	advanceFunds		= @KSP_Contracts:FundAdv * 0.5					// Adv Funds = based on targetBody
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:homeMoons
	}

	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
		moontemp 			= @KSP_Contracts:firstMoon.First()
	}	
	DATA
	{
		type				= int
		requiredValue		= true
		firstMoonIndex		= @KSP_Contracts:firstMoon.First().Index()
		curMoonIndex		= @/targetBody.Index()
		deltaIndex			= (@/firstMoonIndex - @/curMoonIndex) + 1
	}	

	DATA
	{
		type = double
		maxAp = @/targetBody.SphereOfInfluence() * 0.95   	// 95% of planet body SOI
		maxApKM = @/maxAp / 1000    						// Convert to km
	}
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name 	= All
		type	= All
		
		REQUIREMENT
		{
			name 		= FlyBy
			type 		= FlyBy
			checkType 	= UNMANNED
		}
		REQUIREMENT
		{
			name		= Expression
			type		= Expression
			title		= Verify that Flyby Moon Mission was complete.
			expression	= $probeMoonFlyby >= @/deltaIndex
		}
	
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = MoonSat
		type = VesselParameterGroup
		title = Moon Satellite
		define = MoonSat
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitMoon
			type = Orbit
			situation = ORBITING
			maxPeA = @/maxAp
			title = Enter Orbit around @targetBody with a Periapsis below @/maxApKM km
			hideChildren = true
		}
		PARAMETER
		{
			name = MoonScience
			type = CollectScience
			recoveryMethod = Transmit
			title = Transmit Science from space around @targetBody
			hideChildren = true
			completeInSequence = true
		}
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//
	BEHAVIOUR
	{
		name = Progression
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
		probeMoonOrbit = $probeMoonOrbit + 1
		}
	}	
	
}	
		
	