// *************************** Homeworld Moon Surface Bases
// 
// Goal for this contract is to identify a location and build a surface base on the moons around the home planet.
//
CONTRACT_TYPE
{
	name 			= MoonSurfaceBase
	sortKey 		= 300
	group 			= MoonExploration
	title			= Build a surface base on @targetBody
	genericTitle	= Build a surface base on the surface of a moon.
	topic			= Exploration
	notes			= Select a location on @targetBody for the surface base, launch and land components for the surface base
	synopsis 		= Select a location on @targetBody for the surface base, launch and land components for the surface base
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	//minExpiry		= 0
	//maxExpiry		= 0
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= @/targetBodyValid1
	
	description 		= This is a major task for the space program.  We need to identify a good landing location on the surface of @/targetBody based on the previous Scan and Survey Data.  Once the location has been selected, send the different components and start the base building project on the surface of @targetBody. This task can be completed  with multiple launches.
	genericDescription 	= Build and setup the core components of the surface base.
	completedMessage	= Congratulations! We completed this major milestone and built the surface base on @/targetBody and sent some crew to live in the new base.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Contracts:RewardSci * 0.5				// Science Reward 2.5
	rewardReputation	= @KSP_Contracts:RewardRep * Random(5.0, 15.0)	// Reputation Increase ~10 to 20
	rewardFunds			= @KSP_Contracts:FundComp * 4.0					// Funds = based on targetBody
	advanceFunds		= @KSP_Contracts:FundAdv * 1.0					// Adv Funds = based on targetBody
	failureReputation 	= @rewardReputation * 0.5						// Reputation = 15
	failureFunds		= @rewardFunds * 0.8							// Set to 80% of reward funds
	
	// Contract Significance
	//
	//  Valid Types: Trivial, Significant, Exceptional
	//
	prestige = Significant
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Contracts:homeMoonsSurface
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
		moontemp 			= @KSP_Contracts:firstMoon.First()
	}	
	DATA
	{
		type				= int
		requiredValue		= true
		firstMoonIndex		= @KSP_Contracts:firstMoon.First().Index()
		curMoonIndex		= @/targetBody.Index()
		deltaIndex			= (@/firstMoonIndex - @/curMoonIndex) + 1
	}	
	DATA
	{
		type				= List<CelestialBody>
		requiredValue		= false
		moonReturnList1		= @KSP_Contracts:returnedMoons
	}

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = MoonOrbitalSurvey
		type = PerformOrbitalSurvey
		title = The moon has had an orbital survey
	}
	
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		minCoverage = 79.0
		scanType = AltimetryHiRes
		title = The moon has had a High Res Scan
	}
	REQUIREMENT:NEEDS[SCANsat]
	{
		name = MoonAltimetryHiRes
		type = SCANsatCoverage
		minCoverage = 79.0
		scanType = ResourceLoRes
		title = The moon has had a Low Res Scan
	}

	REQUIREMENT
	{
		name = OrbitalScannerUnlocked
		type = PartModuleUnlocked
		partModule = ModuleOrbitalSurveyor
		title = Must have an orbital scanner unlocked
	}

	REQUIREMENT
	{
		name 	= All
		type	= All

		REQUIREMENT
		{
			name 		= ReturnFromSurface
			type 		= ReturnFromSurface
			checkType 	= MANNED
		}
		
		REQUIREMENT
		{
			name		= Expression1
			type		= Expression
			title		= Check to make sure we reached the moon from a previous contract
			expression	= (@/moonReturnList1.Contains(@/targetBody)) == true
		}
		REQUIREMENT
		{
			name		= Expression2
			type		= Expression
			title		= Make sure crew landing mission was complete.
			expression	= $crewMoonLanding >= @/deltaIndex
		}
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = BaseMoonProbe
		type = VesselParameterGroup
		title = Send a Probe to the selected location on the surface of @/targetBody to confirm the base location.
		define = BaseProbe1

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}		

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (Uncrewed)
			hideChildren = true
		}
		
		PARAMETER
		{
			name = LandOnMoon
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on @targetBody
			hideChildren = true
			completeInSequence = true
		}
		PARAMETER
		{
			name = ScoutingDuration
			type = Duration
			duration = 3d
			preWaitText = Waiting for the arrival of the Probe
			waitingText = Surveying the landing site
			completionText = Survey complete!
			completeInSequence = true
			rewardFunds = 250000.0 * Random(1.1, 1.3)
			rewardReputation = 20.0
			completedMessage = Congratulations!!! Our probe completed the survey and confirmed the location of the Moon Base on @/targetBody.
		}
	}

	PARAMETER
	{
		name = BaseMoonCore
		type = VesselParameterGroup
		title = Build Your @targetBody surface base!
		notes = The initial landing spot for your base will be where you left your scout rover. You can choose to fufill all the base requirements with one launch, or you can use multiple launches to get everything you need to create your base.
		completeInSequence = true
		
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Space for at least 3 crew
			hideChildren = true
			disableOnStateChange = false
		}
		
		// Have Power Generation
		PARAMETER
		{
			name = PowerGeneration
			type = Any
			title = Have any type of Power Generation on your Station
			disableOnStateChange = false
			
			PARAMETER
			{
				name = PartValidationSolar
				type = PartValidation
				partModule = ModuleDeployableSolarPanel
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
			PARAMETER
			{
				name = PartValidationRTG
				type = PartValidation
				partModule = ModuleGenerator
				minCount = 1
				title = Have at least 1 RTG
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureSolar]
			{
				name = PartValidationNFSolar
				type = PartValidation
				partModule = ModuleCurvedSolarPanel
				minCount = 1
				title = Have at least 1 Curved Solar Panel
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFFission
				type = PartValidation
				partModule = FissionReactor
				minCount = 1
				title = Have at least 1 Fisson Reactor
				hideChildren = true
			}
			PARAMETER:NEEDS[NearFutureElectrical]
			{
				name = PartValidationNFRTG
				type = PartValidation
				partModule = ModuleRadioisotopeGenerator
				minCount = 1
				title = Have at least 1 Solar Panel
				hideChildren = true
			}
		}
		// Have Science Lab
		PARAMETER
		{
			name = ScienceLab
			type = PartValidation
			title = Have at least one Science Lab on the station
			minCount = 1
			partModule = ModuleScienceLab
			hideChildren = true
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = LandOnMoon
			type = ReachState
			situation = LANDED
			disableOnStateChange = false
			title = Land on @targetBody
			hideChildren = true
		}

		PARAMETER
		{
			name = LandAtWaypoint
			type = VisitWaypoint
			index = 0
			distance = 4000.0
			title = Land near survey probe on the surface of @/targetBody
			showMessages = true
		}
				
		PARAMETER
		{
			name = VesselIsBase
			type = VesselIsType
			vesselType = Base
			title = Change the vessel type to Base
			hideChildren = true
			disableOnStateChange = false
			completeInSequence = true
		}
		
		rewardFunds = 650000 * Random(1.1, 1.3)
		completedMessage = Success!! Our surface base on @/targetBody has been built.  Now we need to send some crew to the new surface base!
		completeInSequence = true
	}
	
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//

	BEHAVIOUR
	{
		name = Progression2
		type = Expression
		
		PARAMETER_COMPLETED
		{
			parameter = BaseMoonProbe

			BEHAVIOUR
			{
				name = MoonBaseWaypoint
				type = WaypointGenerator
				WAYPOINT
				{
					name = Base Landing Spot
					parameter = BaseMoonProbe
					icon = balloon
					altitude = 0.0
					latitude = BaseProbe1.Latitude()
					longitude = BaseProbe1.Longitude()
				}
			}
		}
	}


	
	
}	
		
	